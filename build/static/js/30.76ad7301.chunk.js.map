{"version":3,"sources":["Hooks/useInfiniteScroll.ts","Helpers/Request/Services/Communities/NewsFeed.ts","Views/Community/General/Component/AllCommunities.tsx"],"names":["timeOut","useInfiniteScroll","currentPage","useState","page","setPage","pageIncreamentOnScroll","window","innerHeight","scrollY","document","body","offsetHeight","setTimeout","prevValue","useEffect","addEventListener","removeEventListener","NewsFeed","fetch","axiosService","get","GeneralCommunities","posts","setPosts","loading","setLoading","React","awards","setAwards","then","resp","console","log","data","response","docs","deletePost","event","filteredPosts","filter","post","_id","detail","id","deleteEvent","DELETE_POST_EVENT","DELETE_EVENT_EVENT","NewsFeedPosts","topMargin"],"mappings":"qHAEIA,EAAiC,KAuBtBC,IArBW,WAAsB,IAArBC,EAAoB,uDAAN,EAAM,EACnBC,mBAAiBD,GADE,mBACpCE,EADoC,KAC9BC,EAD8B,KAGrCC,EAAyB,WACvBC,OAAOC,YAAcD,OAAOE,SAAWC,SAASC,KAAKC,aAAe,KAAmB,OAAZZ,IAC3EA,EAAUa,YAAW,WACjBR,GAAQ,SAAAS,GAAS,OAAIA,EAAY,KACjCd,EAAU,OACX,OAUX,OANAe,qBAAU,WAEN,OADAL,SAASM,iBAAiB,SAAUV,GAC7B,kBAAMI,SAASO,oBAAoB,SAAUX,MAErD,CAACF,IAEG,CAAEA,U,kFChBEc,EAJE,CACbC,MAAO,eAACf,EAAD,uDAAgB,EAAhB,OAAsBgB,IAAaC,IAAb,iCAA2CjB,M,yBCqD7DkB,UA/CgB,WAAO,IAAD,EACPnB,mBAAsB,IADf,mBAC1BoB,EAD0B,KACnBC,EADmB,KAEzBpB,EAASH,cAATG,KAFyB,EAGHD,oBAAS,GAHN,mBAG1BsB,EAH0B,KAGjBC,EAHiB,OAILC,IAAMxB,SAAS,IAJV,mBAI1ByB,EAJ0B,KAIlBC,EAJkB,KAMjCd,qBAAU,WACNK,IAAaC,IAAI,eAAeS,MAAK,SAAAC,GACjCC,QAAQC,IAAIF,GACZF,EAAUE,EAAKG,KAAKA,WAEzB,IAEHnB,qBAAU,WACNG,EAASC,MAAMf,GAAM0B,MAAK,SAAAK,GAClBA,IACAT,GAAW,GACXF,EAAS,GAAD,mBAAKD,GAAL,YAAeY,EAASD,KAAKA,KAAKE,cAInD,CAAChC,IAEJ,IAAMiC,EAAa,SAACC,GAChB,IAAMC,EAAgBhB,EAAMiB,QAAO,SAAAC,GAAI,aAAI,UAAAA,EAAKA,YAAL,eAAWC,OAAQJ,EAAMK,OAAOC,MAC3EpB,EAASe,IAGPM,EAAc,SAACP,GACjB,IAAMC,EAAgBhB,EAAMiB,QAAO,SAAAC,GAAI,aAAI,UAAAA,EAAKH,aAAL,eAAYI,OAAQJ,EAAMK,OAAOC,MAC5EpB,EAASe,IAcb,OAXAxB,qBAAU,WAEN,OADAL,SAASM,iBAAiB8B,IAAmBT,GACtC,kBAAM3B,SAASM,iBAAiB8B,IAAmBT,MAC3D,CAACA,EAAYd,IAEhBR,qBAAU,WAEN,OADAL,SAASM,iBAAiB+B,IAAoBF,GACvC,kBAAMnC,SAASM,iBAAiB+B,IAAoBF,MAE5D,CAACR,EAAYd,IAET,kBAACyB,EAAA,EAAD,CAAezB,MAAOA,EAAO0B,WAAW,EAAOxB,QAASA,EAASG,OAAQA","file":"static/js/30.76ad7301.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nlet timeOut: null | NodeJS.Timeout = null\n\nconst useInfiniteScroll = (currentPage = 1) => {\n    const [page, setPage] = useState<number>(currentPage)\n\n    const pageIncreamentOnScroll = () => {\n        if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100 && timeOut === null) {\n            timeOut = setTimeout(() => {\n                setPage(prevValue => prevValue + 1)\n                timeOut = null\n            }, 2000)\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"scroll\", pageIncreamentOnScroll)\n        return () => document.removeEventListener(\"scroll\", pageIncreamentOnScroll)\n        // eslint-disable-next-line\n    }, [page])\n\n    return { page }\n}\n\nexport default useInfiniteScroll\n","import axiosService from '../../axiosService'\n\nconst NewsFeed = {\n    fetch: (page: number = 1) => axiosService.get(`/general/newsFeed?page=${page}`),\n}\n\nexport default NewsFeed\n","import React, { FC, useEffect, useState } from \"react\"\n\nimport NewsFeed from \"../../../../Helpers/Request/Services/Communities/NewsFeed\"\nimport useInfiniteScroll from \"../../../../Hooks/useInfiniteScroll\"\nimport { INewsFeed } from \"../../../../Models/User/IEvent\"\nimport NewsFeedPosts from \"./NewsFeedPosts\"\nimport { DELETE_POST_EVENT, DELETE_EVENT_EVENT } from \"../../../../Constants/constants\"\nimport axiosService from \"../../../../Helpers/Request/axiosService\"\n\nconst GeneralCommunities: FC = () => {\n    const [posts, setPosts] = useState<INewsFeed[]>([])\n    const { page } = useInfiniteScroll()\n    const [loading, setLoading] = useState(true)\n    const [awards, setAwards] = React.useState([])\n\n    useEffect(() => {\n        axiosService.get(\"/award/list\").then(resp => {\n            console.log(resp)\n            setAwards(resp.data.data)\n        })\n    }, [])\n\n    useEffect(() => {\n        NewsFeed.fetch(page).then(response => {\n            if (response) {\n                setLoading(false)\n                setPosts([...posts, ...response.data.data.docs])\n            }\n        })\n        // eslint-disable-next-line\n    }, [page])\n\n    const deletePost = (event: any) => {\n        const filteredPosts = posts.filter(post => post.post?._id !== event.detail.id)\n        setPosts(filteredPosts)\n    }\n\n    const deleteEvent = (event: any) => {\n        const filteredPosts = posts.filter(post => post.event?._id !== event.detail.id)\n        setPosts(filteredPosts)\n    }\n \n    useEffect(() => {\n        document.addEventListener(DELETE_POST_EVENT, deletePost)\n        return () => document.addEventListener(DELETE_POST_EVENT, deletePost)\n    }, [deletePost, posts])\n\n    useEffect(() => {\n        document.addEventListener(DELETE_EVENT_EVENT, deleteEvent)\n        return () => document.addEventListener(DELETE_EVENT_EVENT, deleteEvent)\n        // eslint-disable-next-line\n    }, [deletePost, posts])\n\n    return <NewsFeedPosts posts={posts} topMargin={false} loading={loading} awards={awards} />\n}\n\nexport default GeneralCommunities\n"],"sourceRoot":""}