{"version":3,"sources":["Controller/Home/Announcement/newDesign/Index.tsx","Hooks/useInfiniteScroll.ts","Views/Profile/Events/Components/EventsItems.tsx","Views/Profile/Events/index.tsx"],"names":["Announcement","event","link","useState","going","isGoing","setisGoing","className","onMarkGoing","timeOut","useInfiniteScroll","currentPage","page","setPage","pageIncreamentOnScroll","window","innerHeight","scrollY","document","body","offsetHeight","setTimeout","prevValue","useEffect","addEventListener","removeEventListener","EventsItems","events","map","item","key","_id","MyEvents","onlySubscribed","title","setEvents","eventApi","fetch","then","response","console","log","e","filterRecords","data","docs","catch","err","records","length","filter","r","isSubscribed","deleteEvent","es","detail","id","DELETE_EVENT_EVENT","showSideBar"],"mappings":"uIA6BeA,IAnBwB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAAW,EACtBC,mBAASF,GADa,gCAE1BE,mBAASF,EAAMG,QAFW,mBAEjDC,EAFiD,KAExCC,EAFwC,KAGxD,OACI,yBAAKC,UAAU,6BACX,yBAAKA,UAAU,mBACVN,GACG,kBAAC,IAAD,CACIA,MAAOA,EACPG,MAAOC,EACPG,YAAa,SAACJ,GAAD,OAAgBE,EAAWF,IACxCF,KAAMA,Q,mDCnB1BO,EAAiC,KAuBtBC,IArBW,WAAsB,IAArBC,EAAoB,uDAAN,EAAM,EACnBR,mBAAiBQ,GADE,mBACpCC,EADoC,KAC9BC,EAD8B,KAGrCC,EAAyB,WACvBC,OAAOC,YAAcD,OAAOE,SAAWC,SAASC,KAAKC,aAAe,KAAmB,OAAZX,IAC3EA,EAAUY,YAAW,WACjBR,GAAQ,SAAAS,GAAS,OAAIA,EAAY,KACjCb,EAAU,OACX,OAUX,OANAc,qBAAU,WAEN,OADAL,SAASM,iBAAiB,SAAUV,GAC7B,kBAAMI,SAASO,oBAAoB,SAAUX,MAErD,CAACF,IAEG,CAAEA,U,iCCtBb,6BAeec,IAV0B,SAAC,GAAqB,IAAD,IAAlBC,cAAkB,MAAT,GAAS,EAC1D,OACI,yBAAKpB,UAAU,6BACVoB,EAAOC,KAAI,SAAAC,GAAI,OACZ,kBAAC,IAAD,CAAcC,IAAKD,EAAKE,IAAK9B,MAAO4B,U,6HCyCrCG,UAxCE,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,eAA+C,IAA/BC,aAA+B,MAAvB,YAAuB,IACnC/B,mBAAmB,IADgB,mBACxDwB,EADwD,KAChDQ,EADgD,KAEvDvB,EAASF,YAAkB,GAA3BE,KAERW,qBAAU,WACNa,IACKC,MAAMzB,GACN0B,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,8BACZN,GAAU,SAAAO,GAAC,4BAAQA,GAAR,YAAcC,EAAcJ,EAASK,KAAKC,cAExDC,OAAM,SAAAC,GAAG,OAAIP,QAAQC,IAAIM,QAC/B,CAACnC,IAEJ,IAAM+B,EAAgB,SAACK,GACnB,OAAIf,GAAkBe,EAAQC,OACnBD,EAAQE,QAAO,SAAAC,GAAC,OAAsB,GAAlBA,EAAEC,gBAE1BJ,GAGLK,EAAc,SAACpD,GACjB,IAAMqD,EAAK3B,EAAOuB,QAAO,SAAAR,GAAC,OAAIA,EAAEX,MAAQ9B,EAAMsD,OAAOC,MACrDrB,EAAUmB,IAQd,OALA/B,qBAAU,WAEN,OADAL,SAASM,iBAAiBiC,IAAoBJ,GACvC,kBAAMnC,SAASO,oBAAoBgC,IAAoBJ,MAC/D,CAAC1B,EAAQ0B,IAGR,kBAAC,IAAD,CAASK,aAAa,GAClB,kBAAC,IAAD,CAAYxB,MAAOA,IACnB,kBAAC,IAAD,CAAaP,OAAQA","file":"static/js/17.a4a81d80.chunk.js","sourcesContent":["import React, { FC, useState } from \"react\"\n\nimport IEvent from \"../../../../Models/User/IEvent\"\nimport EventBody from \"./EventBody\"\n\nexport interface Announcement {\n    event: IEvent\n    link?: string\n}\n\nconst Announcement: FC<Announcement> = ({ event, link }) => {\n    const [eventItem, seteventItem] = useState(event)\n    const [isGoing, setisGoing] = useState(event.going)\n    return (\n        <div className=\"event-card-container pt-3\">\n            <div className=\"event-card-wrap\">\n                {event && (\n                    <EventBody\n                        event={event}\n                        going={isGoing}\n                        onMarkGoing={(going: any) => setisGoing(going)}\n                        link={link}\n                    />\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Announcement\n","import { useState, useEffect } from \"react\"\n\nlet timeOut: null | NodeJS.Timeout = null\n\nconst useInfiniteScroll = (currentPage = 1) => {\n    const [page, setPage] = useState<number>(currentPage)\n\n    const pageIncreamentOnScroll = () => {\n        if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100 && timeOut === null) {\n            timeOut = setTimeout(() => {\n                setPage(prevValue => prevValue + 1)\n                timeOut = null\n            }, 2000)\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"scroll\", pageIncreamentOnScroll)\n        return () => document.removeEventListener(\"scroll\", pageIncreamentOnScroll)\n        // eslint-disable-next-line\n    }, [page])\n\n    return { page }\n}\n\nexport default useInfiniteScroll\n","import React, { FC } from \"react\"\n\nimport Announcement from \"../../../../Controller/Home/Announcement/newDesign/Index\"\nimport EventsInterface from \"../../../../Interface/Events/EventsInterface\"\n\nconst EventsItems: FC<EventsInterface> = ({ events = [] }) => {\n    return (\n        <div className=\"profile_events__container\">\n            {events.map(item => (\n                <Announcement key={item._id} event={item} />\n            ))}\n        </div>\n    )\n}\n\nexport default EventsItems\n","import React, { useState, useEffect } from \"react\"\n\nimport Profile from \"..\"\nimport FormHeader from \"../../../Container/Top/FormHeader\"\nimport EventsItems from \"./Components/EventsItems\"\nimport eventApi from \"../../../Helpers/Request/Services/Event/Event\"\nimport IEvent from \"../../../Models/User/IEvent\"\nimport useInfiniteScroll from \"../../../Hooks/useInfiniteScroll\"\nimport { DELETE_EVENT_EVENT } from \"../../../Constants/constants\"\n\nconst MyEvents = ({ onlySubscribed, title = \"My Events\" }: any) => {\n    const [events, setEvents] = useState<IEvent[]>([])\n    const { page } = useInfiniteScroll(1)\n\n    useEffect(() => {\n        eventApi\n            .fetch(page)\n            .then(response => {\n                console.log(response)\n                console.log(\"-------- my events -------\")\n                setEvents(e => [...e, ...filterRecords(response.data.docs)])\n            })\n            .catch(err => console.log(err))\n    }, [page])\n\n    const filterRecords = (records: Array<any>) => {\n        if (onlySubscribed && records.length) {\n            return records.filter(r => r.isSubscribed == true)\n        }\n        return records\n    }\n\n    const deleteEvent = (event: any) => {\n        const es = events.filter(e => e._id !== event.detail.id)\n        setEvents(es)\n    }\n\n    useEffect(() => {\n        document.addEventListener(DELETE_EVENT_EVENT, deleteEvent)\n        return () => document.removeEventListener(DELETE_EVENT_EVENT, deleteEvent)\n    }, [events, deleteEvent])\n\n    return (\n        <Profile showSideBar={false}>\n            <FormHeader title={title} />\n            <EventsItems events={events} />\n        </Profile>\n    )\n}\n\nexport default MyEvents\n"],"sourceRoot":""}