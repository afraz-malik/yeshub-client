{"version":3,"sources":["Helpers/Request/Services/uploadFile/FileUpload.ts","Views/Post/Create/Component/PostDragAndDrop.tsx","Views/Post/Create/Component/PostImages.tsx","Views/Post/Create/Component/PostLinks.tsx","Views/Post/Create/Component/PostVIdeo.tsx","Components/Editors/index.tsx","Views/Post/Create/Component/Create.tsx","Helpers/Functions/removeAssetUrl.ts","Views/Post/Create/index.tsx"],"names":["Post","uploadFile","data","axiosService","post","deleteFile","file","delete","PostDragAndDrop","onChange","onDragDrop","useState","b","setb","className","onDragOver","e","preventDefault","onDragLeave","console","log","style","onDragEnter","onDrop","id","src","UploadPhotoImage","alt","name","type","multiple","PostImages","imagePreviews","onRemoveImage","PlusIcon","onClick","CloseIcon","slice","map","img","index","htmlFor","PostLinks","links","onAddLinks","item","idx","key","FormInput","props","placeholder","defaultValue","title","url","PostVideoUrl","videoUrl","TinyEditor","value","height","initialValue","init","menubar","branding","plugins","toolbar","onEditorChange","content","loader","config","readonly","buttons","allowResizeY","Create","state","useLocation","relatedLinks","setRelatedLinks","images","video","showAdditionalTabs","setAdditionalTabs","knowledgeGroup","create_from","community","link","roleId","isPublished","tag","tags","values","setValues","description","draftDescription","setDescription","searchResults","setsearchResults","show","searchResultShow","setsearchResultShow","previews","setPreviews","editor","useRef","useEffect","window","addEventListener","setTimeout","removeEventListener","concat","vals","image","length","assetUrl","ID","_id","p","forEach","itm","push","scrollTo","onTabClick","falseValues","_","mapValues","currentTarget","target","checked","onImageChange","a","files","Array","from","prevs","FormData","append","updateImage","counter","d","Promise","all","resolve","reject","fd","FileUploader","then","res","uploadedFiles","splice","addTag","tagsApi","create","catch","err","str","deleteImage","WEBSITE_URL","replace","searchTag","query","search","searches","filter","indexOf","FormHeader","showDrafts","SelectCommunity","onSelect","selectedCommunity","Form","getFormData","submitUrl","validate","isFormData","saveAsDraft","method","buttonText","refreshUser","redirectUrl","formId","isRequired","icon","faUpload","faLink","faVideo","dataTransfer","relatedClone","ref","onDescriptionChange","position","onKeyPress","charCode","onKeyPressHandle","onItemClick","t","ind","marginBottom","onDelete","onDeleteTag","Tag","padding","borderRadius","margin","display","backgroundColor","color","top","right","width","viewBox","fill","xmlns","cx","cy","r","stroke","stroke-width","PlaceholderContainer","border","minWidth","left","zIndex","listStyle","CommunityRules","Fragment","RefreshIcon","to","CreatePost"],"mappings":"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","file":"static/js/29.d6ebaf1c.chunk.js","sourcesContent":["import axiosService from \"../../axiosService\"\n\nconst Post = {\n    uploadFile: (data: FormData) => axiosService.post(`media/upload`, data),\n    deleteFile: (file: string) => axiosService.delete(`media/upload`, {data: {file: file}})\n}\n\nexport default Post","import React, { FC, ChangeEvent, useState } from \"react\"\nimport { PostImagesTypes } from \"../Types/PostImagesType\"\nimport { UploadPhotoImage } from \"../../../../Shared/Images/Images\"\n\nconst PostDragAndDrop: FC<PostImagesTypes> = ({ onChange, onDragDrop }) => {\n\n    const [b, setb] = useState(0)\n    \n    const onDragEnter = (e :any) => {\n        console.log('drag entered ....');\n        e.preventDefault();\n        setb(2);\n    }\n\n    // const onDragDrop = (e: any) => {\n    //     setb(0);\n    //     e.preventDefault();\n    //     console.log('droped ...');\n    //     console.log(e.dataTransfer.files);\n    //     console.log(e.target.file);\n    // }\n\n    const onDragLeave = (e: any) => {\n        console.log('drag leaved ...');\n        e.preventDefault();\n        setb(0);\n    }\n\n    const onDragOver = (e: any) => {\n        e.preventDefault();\n        setb(2);\n    }\n\n    return (\n        <div className=\"form-group\" onDragOver={onDragOver} onDragLeave={onDragLeave} style={{\"border\": `${b}px solid green`}} onDragEnter={onDragEnter} onDrop={onDragDrop}>\n\n         {/* <div className=\"form-group\"> */}\n            <div id=\"drop-region\">\n                <div className=\"drop-image\">\n                    <div className=\"feature_link\">\n                        <label>\n                            <span>\n                                <img src={UploadPhotoImage} alt=\"upload\" />\n                            </span>\n                        </label>\n                    </div>\n                </div>\n                <div className=\"drop-message\">\n                    Drag & Drop images or click to upload\n                </div>\n                <input \n                    name=\"image\"\n                    type=\"file\"\n                    multiple={true}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                        onChange(e, 0)\n                    }\n                />\n                <div id=\"image-preview\" />\n            </div>\n        </div>\n    )\n}\n\nexport default PostDragAndDrop\n","import React, { FC } from \"react\"\nimport { PlusIcon, CloseIcon } from \"../../../../Shared/Images/Images\"\nimport { PostImagesTypes } from \"../Types/PostImagesType\"\n\nconst PostImages: FC<PostImagesTypes> = ({\n    onChange,\n    imagePreviews,\n    onRemoveImage,\n}) => {\n    console.log('post images (previews)', imagePreviews);\n    return (\n        \n        <div className=\"form-group position-relative featured__image\">\n            <div className=\"upload-post-image\">\n                <div className=\"posted-image\">\n                    <img\n                        src={imagePreviews[0] ? imagePreviews[0] : PlusIcon}\n                        className=\"img-fluid\"\n                        alt=\"dummy\"\n                    />\n                    <input\n                        name=\"image\"\n                        id=\"some\"\n                        className=\"btn btn-primary\"\n                        type=\"file\"\n                        onChange={e => onChange(e, 0)}\n                    />\n                    <div className=\"removeImage\">\n                        <button type=\"button\" onClick={() => onRemoveImage(0)}>\n                            <img\n                                src={CloseIcon}\n                                className=\"img-fluid\"\n                                alt=\"dummy\"\n                            />\n                        </button>\n                    </div>\n                </div>\n                <div className=\"upload-image-button\">\n                    <div className=\"d-flex flex-wrap justify-content-center mt-3\">\n                        {imagePreviews.slice(1).map((img, index) => (\n                            <div className=\"button-upload\">\n                                {img ? (\n                                    <div className=\"removeImage\">\n                                        <button\n                                            type=\"button\"\n                                            onClick={() =>\n                                                onRemoveImage(index + 1)\n                                            }\n                                        >\n                                            <img\n                                                src={CloseIcon}\n                                                className=\"img-fluid\"\n                                                alt={`${index + 1}`}\n                                            />\n                                        </button>\n                                    </div>\n                                ) : null}\n                                <label\n                                    htmlFor={`image-${index + 1}${\n                                        img ? \"e\" : \"\"\n                                    }`}\n                                >\n                                    <input\n                                        type=\"file\"\n                                        id={`image-${index + 1}`}\n                                        onChange={e => onChange(e, index + 1)}\n                                    />\n                                    <img src={img ? img : PlusIcon} alt=\"add\" />\n                                </label>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PostImages\n","import React, { FC, Fragment, ChangeEvent } from \"react\"\nimport FormInput from \"../../../../Components/Form/FormInput\"\n\ntype PostLinks = {\n    onChange: Function\n    links: Array<Record<string, any>>\n    onAddLinks: Function\n}\n\nconst PostLinks: FC<PostLinks> = ({ onChange, onAddLinks, links }) => {\n    return (\n        <>\n            {links.map((item, idx) => (\n                <Fragment key={idx}>\n                    <FormInput\n                        type=\"text\"\n                        name=\"title\"\n                        props={{\n                            placeholder: \"Title\",\n                        }}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                            onChange(e, idx)\n                        }\n                        defaultValue={item.title}\n                    />\n                    <FormInput\n                        type=\"text\"\n                        name=\"url\"\n                        props={{\n                            placeholder: \"Url\",\n                        }}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                            onChange(e, idx)\n                        }\n                        defaultValue={item.url}\n                    />\n                </Fragment>\n            ))}\n            {/* <div className=\"form-group\">\n                <button\n                    className=\"btn-links\"\n                    type=\"button\"\n                    onClick={() => onAddLinks()}\n                >\n                    + Add more\n                </button>\n            </div> */}\n        </>\n    )\n}\n\nexport default PostLinks\n","import React, { FC } from 'react'\n\nimport FormInput from '../../../../Components/Form/FormInput'\n\ntype PostVideoUrl = {\n    onChange: Function\n    videoUrl: string\n}\n\nconst PostVideoUrl: FC<PostVideoUrl> = ({ onChange, videoUrl }) => {\n    return (\n        <>\n            <FormInput\n                type=\"text\"\n                name=\"videoUrl\"\n                props={{\n                    placeholder: \"Video Url\",\n                }}\n                onChange={onChange}\n                defaultValue={videoUrl}\n            />\n            <small className=\"text-danger font-weight-bold\">\n                * Only YouTube video is allowed\n            </small>\n        </>\n    )\n}\n\nexport default PostVideoUrl\n","import React from \"react\"\n\nimport \"tinymce/tinymce\"\nimport \"tinymce/icons/default\"\nimport \"tinymce/themes/silver\"\nimport \"tinymce/plugins/paste\"\nimport \"tinymce/plugins/link\"\nimport \"tinymce/plugins/image\"\nimport \"tinymce/plugins/table\"\nimport \"tinymce/skins/ui/oxide/skin.min.css\"\nimport \"tinymce/skins/ui/oxide/content.min.css\"\nimport \"tinymce/skins/content/default/content.min.css\"\nimport { Editor } from \"@tinymce/tinymce-react\"\n\nconst TinyEditor: React.FC<any> = ({ value, height, onChange }) => {\n    const handleEditorChange = (content: any) => {\n        onChange(content)\n    }\n\n    return (\n        <Editor\n            initialValue={value}\n            init={{\n                height: height || \"500px\",\n                menubar: true,\n                branding: false,\n                plugins: [\n                    \"advlist autolink lists link image charmap print preview anchor\",\n                    \"searchreplace visualblocks code fullscreen\",\n                    \"insertdatetime media table paste code help wordcount\",\n                ],\n                toolbar:\n                    \"undo redo | formatselect | bold italic backcolor | bullist numlist outdent indent | \\\n         alignleft aligncenter alignright alignjustify | \\\n          removeformat | link | help\",\n            }}\n            onEditorChange={handleEditorChange}\n        />\n    )\n}\n\nexport default TinyEditor\n","import JoditEditor from \"jodit-react\"\nimport _ from \"lodash\"\nimport React, { ChangeEvent, FC, MouseEvent, ReactElement, useEffect, useRef, useState } from \"react\"\nimport { useLocation } from \"react-router-dom\"\nimport { faVideo, faLink, faUpload } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport Form from \"../../../../Components/Form/Form\"\nimport FormInput from \"../../../../Components/Form/FormInput\"\nimport SelectCommunity from \"../../../../Components/SelectElement/SelectCommunity\"\nimport FormHeader from \"../../../../Container/Top/FormHeader\"\nimport PostDragAndDrop from \"./PostDragAndDrop\"\nimport PostImages from \"./PostImages\"\nimport PostLinks from \"./PostLinks\"\nimport PostVideoUrl from \"./PostVIdeo\"\nimport assetUrl from \"../../../../Helpers/Functions/assetUrl\"\nimport Post from \"../../../../Helpers/Request/Services/Post/Post\"\nimport removeAssetUrl from \"../../../../Helpers/Functions/removeAssetUrl\"\n\nimport FileUploader from \"../../../../Helpers/Request/Services/uploadFile/FileUpload\"\nimport Images from \"../../../../Components/ImageGallery/components/Images\"\n\nimport tagsApi from \"../../../../Helpers/Request/Services/Tags\"\nimport Editor from \"../../../../Components/Editors\"\n\nconst loader = \"https://media4.giphy.com/media/3oEjI6SIIHBdRxXI40/200.gif\"\n\nconst config = {\n    readonly: false,\n    buttons: [\n        \"bold\",\n        \"strikethrough\",\n        \"underline\",\n        \"italic\",\n        \"eraser\",\n        \"superscript\",\n        \"subscript\",\n        \"ul\",\n        \"outdent\",\n        \"ol\",\n        \"indent\",\n        \"align\",\n        \"undo\",\n        \"redo\",\n        \"\\n\",\n        \"selectall\",\n        \"cut\",\n        \"copy\",\n        \"paste\",\n        \"copyformat\",\n        \"|\",\n        \"hr\",\n        \"symbol\",\n        \"print\",\n        \"about\",\n    ],\n    allowResizeY: true,\n}\n\nconst Create: FC = (): ReactElement => {\n    const { state }: any = useLocation()\n    const [relatedLinks, setRelatedLinks] = useState<\n        {\n            title: string\n            url: string\n        }[]\n    >([])\n\n    const [showAdditionalTabs, setAdditionalTabs] = useState({\n        images: false,\n        links: false,\n        video: false,\n    })\n\n    const [values, setValues] = useState<any>({\n        images: [],\n        title: \"\",\n        knowledgeGroup: state && state.create_from === \"community_detail\" ? state.community : \"\",\n        link: relatedLinks,\n        roleId: \"5e2fd51f34ce7375a792ffc4\",\n        isPublished: true,\n        tag: \"\",\n        tags: [],\n    })\n\n    // if it is creating new post it will be always empty else draft description will be added here one time\n    const [draftDescription, setdraftDescription] = useState(state ? state.description : \"\")\n\n    const [description, setDescription] = useState()\n    const [searchResults, setsearchResults] = useState([])\n\n    const [searchResultShow, setsearchResultShow] = useState({ show: false })\n    const [previews, setPreviews] = useState<any>([])\n    const editor = useRef(null)\n\n    useEffect(() => {\n        setValues({\n            ...values,\n            link: relatedLinks,\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [relatedLinks])\n\n    useEffect(() => {\n        const clickHandler = () => {\n            setTimeout(() => {\n                setsearchResultShow({ ...searchResultShow, show: false })\n            }, 100)\n        }\n\n        window.addEventListener(\"click\", clickHandler)\n\n        return () => {\n            window.removeEventListener(\"click\", e => {})\n        }\n    }, [])\n\n    useEffect(() => {\n        if (showAdditionalTabs.links) {\n            setRelatedLinks(\n                relatedLinks.concat({\n                    title: \"\",\n                    url: \"\",\n                })\n            )\n        } else {\n            setRelatedLinks([])\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [showAdditionalTabs.links])\n\n    useEffect(() => {\n        if (state && state.create_from !== \"community_detail\") {\n            let vals = values\n            if (state.image.length) {\n                let images = state.image.map((img: string, index: number) => assetUrl(img))\n                vals.image = images\n            }\n            vals.title = state.title\n            vals.ID = state._id\n            // vals.knowledgeGroup = state.knowledgeGroup?._id\n            vals.knowledgeGroup = state.knowledgeGroup\n            setValues({ ...vals })\n\n            if (state.image.length) {\n                let p = previews\n                state.image.forEach((itm: any) => {\n                    p.push(assetUrl(itm))\n                })\n                p.push(\"\")\n                setPreviews([...previews])\n                // showAdditionalTabs.images = true\n                setAdditionalTabs({ ...showAdditionalTabs, images: true })\n                // setAdditionalTabs({ ...showAdditionalTabs })\n                console.log(\"previews\", previews, showAdditionalTabs)\n            } else {\n                setPreviews([\"\"])\n            }\n\n            setDescription(state.description)\n\n            if (state.link.length !== 0) {\n                state.link.map((item: { _id?: string; title: string; url: string }) => delete item._id)\n                setRelatedLinks(state.link)\n            }\n            if (state.videoUrl) {\n                setValues({\n                    ...values,\n                    title: state.title,\n                    ID: state._id,\n                    knowledgeGroup: state.knowledgeGroup?._id,\n                    videoUrl: state.videoUrl,\n                })\n            }\n            console.log(\"--- state ---\")\n            console.log(state)\n            console.log(previews)\n            console.log(\"--- state ---\")\n        } else {\n            setPreviews([\"\"])\n        }\n        console.log(\"check previews \", previews)\n        window.scrollTo(0, 0)\n        // eslint-disable-next-line\n    }, [])\n\n    const onTabClick = (e: MouseEvent<HTMLElement>) => {\n        const falseValues = _.mapValues(showAdditionalTabs, () => false)\n        setAdditionalTabs({\n            ...falseValues,\n            [e.currentTarget.id]: true,\n        })\n    }\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const { type, name, value, checked } = e.target\n\n        if (type === \"checkbox\") {\n            setValues({\n                ...values,\n                [name]: checked,\n            })\n            return\n        }\n        setValues({ ...values, [name]: value })\n    }\n\n    const onDescriptionChange = (content: any) => {\n        setDescription(content)\n    }\n\n    const onImageChange = async (e: ChangeEvent<HTMLInputElement>, index: number) => {\n        e.preventDefault()\n        if (e.target.files) {\n            let files = Array.from(e.target.files)\n            let vals = values\n            let prevs: any[] = []\n            files.forEach((file: any) => prevs.push(loader))\n            if (state && state._id) {\n                files.forEach(file => {\n                    const data = new FormData()\n                    data.append(\"images\", file)\n                    Post.updateImage(data, state._id)\n                })\n            }\n            let counter = previews.length\n            let d = [...previews, ...prevs, \"\"]\n\n            setPreviews(d)\n            console.log(\"+++ previews\", previews)\n            // let uploadedFiles = await\n            Promise.all(\n                files.map((file: any) => {\n                    // vals.images.push(file);\n                    return new Promise((resolve, reject) => {\n                        let fd = new FormData()\n                        fd.append(\"images\", file)\n                        FileUploader.uploadFile(fd).then(res => {\n                            resolve(res.data.data)\n                        })\n                    })\n                })\n            ).then(uploadedFiles => {\n                let vals = values\n                uploadedFiles.forEach(file => {\n                    vals.images.push(file)\n                })\n\n                previews.splice(counter - 1, uploadedFiles.length)\n\n                setValues(vals)\n                // previews.splice(previews.length -1 , 1);\n                uploadedFiles = uploadedFiles.map((file: any) => assetUrl(file))\n                setPreviews([...previews, ...uploadedFiles, \"\"])\n            })\n        }\n    }\n\n    const addTag = (tag: any) => {\n        tagsApi\n            .create(tag)\n            .then(res => {\n                console.log(res.data)\n            })\n            .catch(err => console.log(err))\n\n        values.tags.push(tag)\n        setValues({ ...values, tag: \"\" })\n        setsearchResultShow({ show: false })\n    }\n\n    const onKeyPressHandle = (e: any) => {\n        searchTag(e.target.value)\n        if (e.charCode === 13) {\n            addTag(e.target.value)\n            e.preventDefault()\n        }\n        // setValues({...values, tag: e.target.value});\n    }\n\n    const onDragDrop = (e: any) => {\n        e.preventDefault()\n\n        if (e.dataTransfer.files) {\n            let files = Array.from(e.dataTransfer.files)\n            if (state && state._id) {\n                files.forEach((file: any) => {\n                    const data = new FormData()\n                    data.append(\"images\", file)\n                    Post.updateImage(data, state._id)\n                })\n            }\n            let vals = values\n            let prevs: any[] = []\n            files.forEach(file => prevs.push(loader))\n            let d = [...previews, ...prevs, \"\"]\n            setPreviews(d)\n            console.log(\"+++ previews\", previews)\n            // let uploadedFiles = await\n            Promise.all(\n                files.map((file: any) => {\n                    // vals.images.push(file);\n                    return new Promise((resolve, reject) => {\n                        let fd = new FormData()\n                        fd.append(\"images\", file)\n                        FileUploader.uploadFile(fd).then(res => {\n                            resolve(res.data.data)\n                        })\n                    })\n                })\n            ).then(uploadedFiles => {\n                let vals = values\n                uploadedFiles.forEach(file => {\n                    vals.images.push(file)\n                })\n\n                previews.splice(previews.length - uploadedFiles.length - 1, uploadedFiles.length)\n\n                setValues(vals)\n                previews.splice(previews.length - 1, 1)\n                uploadedFiles = uploadedFiles.map((file: any) => assetUrl(file))\n                setPreviews([...previews, ...uploadedFiles, \"\"])\n            })\n        }\n    }\n\n    const onRemoveImage = (index: number) => {\n        if (state && state._id) {\n            console.log(\"on remove testing\", state, values.images, index)\n            Post.deleteImage({\n                ID: state._id,\n                image: removeAssetUrl(values.images[index]),\n            })\n        }\n\n        // values.images.splice(index, 1);\n        // values.images[index] = previews[index] = \"\"\n\n        setValues({ ...values })\n        FileUploader.deleteFile(values.images[index])\n        values.images.splice(index, 1)\n        previews.splice(index, 1)\n        // previews[index] = \"\";\n        setPreviews(previews)\n    }\n\n    const onLinksChange = (e: ChangeEvent<HTMLInputElement>, id: number) => {\n        const { name, value } = e.target\n\n        let relatedClone = relatedLinks\n        relatedClone[id] = { ...relatedClone[id], [name]: value }\n        setRelatedLinks(relatedClone)\n    }\n\n    const onAddLink = () => {\n        setRelatedLinks(\n            relatedLinks.concat({\n                title: \"\",\n                url: \"\",\n            })\n        )\n    }\n\n    const onDeleteTag = (itm: any, index: number) => {\n        values.tags.splice(index, 1)\n        setValues({ ...values })\n    }\n\n    const getFormData = () => {\n        let data = !description\n            ? { ...values }\n            : {\n                  ...values,\n                  description,\n              }\n        if (state && state._id) {\n            data = { ...data, ID: state._id }\n            delete data.images\n            delete data.roleId\n        }\n\n        console.log(\"---- data while creating post  ------\")\n        console.log(data)\n        console.log(\"---- data while creating post  ------\")\n\n        return data\n    }\n\n    const searchTag = (query: string) => {\n        setTimeout(() => {\n            tagsApi\n                .search(query)\n                .then(res => {\n                    console.log(\"search results\", res.data.data)\n                    let searches = res.data.data.filter((itm: any) => values.tags.indexOf(itm.name) === -1)\n                    setsearchResults(searches)\n                    if (res.data.data.length > 0) {\n                        setsearchResultShow({ show: true })\n                    } else {\n                        setsearchResultShow({ show: false })\n                    }\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }, 200)\n    }\n\n    return (\n        <div className=\"cp-wrap\">\n            <FormHeader title=\"Create Post\" showDrafts={false} />\n\n            <div className=\"cp-form mt-3\">\n                <div className=\"form-group\">\n                    <SelectCommunity onSelect={onChange} selectedCommunity={values.knowledgeGroup} />\n                </div>\n\n                <Form\n                    data={getFormData()}\n                    submitUrl={/*state ? \"/post/update\" : */ \"/general/post\"}\n                    validate\n                    isFormData={false}\n                    props={{\n                        saveAsDraft: true,\n                    }}\n                    className=\"form mt-3\"\n                    method={\"POST\"}\n                    buttonText=\"POST\"\n                    refreshUser\n                    redirectUrl={\"/communities\"}\n                    formId=\"create_post\"\n                >\n                    <FormInput\n                        name=\"title\"\n                        type={\"text\"}\n                        isRequired\n                        onChange={onChange}\n                        className=\"form-control form-input2\"\n                        props={{\n                            placeholder: \"TITLE*\",\n                        }}\n                        defaultValue={values.title}\n                    />\n                    <div className=\"form-group\">\n                        <div className=\"d-flex flex-row\">\n                            <div className=\"feature_link\" id=\"images\" onClick={onTabClick}>\n                                <label>\n                                    <span className=\"mr-1\">\n                                        <FontAwesomeIcon icon={faUpload} />\n                                    </span>\n                                    <span>Feature image/s</span>\n                                </label>\n                            </div>\n                            <div className=\"feature_link ml-2\" id=\"links\" onClick={onTabClick}>\n                                <label>\n                                    <span>\n                                        <FontAwesomeIcon icon={faLink} />\n                                    </span>\n                                    <span> Feature link</span>\n                                </label>\n                            </div>\n                            <div className=\"feature_link ml-2\" id=\"video\" onClick={onTabClick}>\n                                <label>\n                                    <span>\n                                        <FontAwesomeIcon className=\"icon\" icon={faVideo} />\n                                    </span>\n                                    <span> Feature Video</span>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n                    {showAdditionalTabs.images && !values.images[0] && previews[0] === \"\" ? (\n                        <PostDragAndDrop\n                            onChange={onImageChange}\n                            imagePreviews={previews}\n                            onRemoveImage={onRemoveImage}\n                            onDragDrop={onDragDrop}\n                        />\n                    ) : (\n                        showAdditionalTabs.images &&\n                        values.images[0] !== null &&\n                        previews[0] !== \"\" && (\n                            <PostImages\n                                onChange={onImageChange}\n                                imagePreviews={previews}\n                                onRemoveImage={onRemoveImage}\n                            />\n                        )\n                    )}\n\n                    {showAdditionalTabs.links && (\n                        <PostLinks onChange={onLinksChange} links={values.link} onAddLinks={onAddLink} />\n                    )}\n\n                    {showAdditionalTabs.video && <PostVideoUrl videoUrl={values.videoUrl} onChange={onChange} />}\n                    <div className=\"form-group\">\n                        <Editor\n                            ref={editor}\n                            value={draftDescription}\n                            config={config}\n                            onChange={(content: any) => onDescriptionChange(content)}\n                        />\n                        {/* <JoditEditor\n                            ref={editor}\n                            value={description}\n                            config={config}\n                            onBlur={content => onDescriptionChange(content)}\n                        /> */}\n                    </div>\n\n                    <div style={{ position: \"relative\" }}>\n                        <input\n                            name=\"tag\"\n                            type=\"text\"\n                            onChange={onChange}\n                            onKeyPress={e => onKeyPressHandle(e)}\n                            className=\"form-control form-input2\"\n                            value={values.tag}\n                            placeholder=\"Add tag\"\n                        />\n                        {searchResultShow.show && (\n                            <PlaceholderContainer\n                                onItemClick={(t: any, ind: any) => addTag(t.name)}\n                                tags={searchResults}\n                            />\n                        )}\n                    </div>\n                    <div className=\"d-flex flex-row\" style={{ marginBottom: \"10px\" }}>\n                        {values.tags.map((itm: any, index: number) => (\n                            <Tag tag={itm} onDelete={() => onDeleteTag(itm.id, index)} key={index} />\n                        ))}\n                    </div>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Create\n\nexport const Tag: React.FC<any> = ({ tag, onDelete }) => {\n    return (\n        <div\n            style={{\n                padding: \"5px 2em 5px 10px\",\n                borderRadius: \"50px\",\n                margin: \"1em 1em 1em 0\",\n                display: \"inline-block\",\n                position: \"relative\",\n                backgroundColor: \"yellow\",\n                color: \"black\",\n            }}\n        >\n            <span onClick={e => onDelete(e)} style={{ position: \"absolute\", top: \"4px\", right: \"5px\" }}>\n                {CloseIcon}\n            </span>\n            <span>{tag}</span>\n        </div>\n    )\n}\n\nexport const CloseIcon = (\n    <svg width=\"20\" height=\"21\" viewBox=\"0 0 20 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"10\" cy=\"10.2661\" r=\"10\" fill=\"white\" />\n        <path d=\"M6 6.26611L14 14.2661M14 6.26611L6 14.2661\" stroke=\"#FFD300\" stroke-width=\"2\" />\n    </svg>\n)\n\nexport const PlaceholderContainer: React.FC<any> = ({ tags = [], onItemClick }) => {\n    return (\n        <>\n            <div\n                style={{\n                    border: \"1px solid lightgray\",\n                    minWidth: \"250px\",\n                    display: \"inline-block\",\n                    position: \"absolute\",\n                    left: 0,\n                    top: 45,\n                    padding: \"5px 15px\",\n                    backgroundColor: \"white\",\n                    zIndex: 123123,\n                }}\n            >\n                {tags.map((itm: any, index: number) => (\n                    <li\n                        className=\"placeholder-list-item\"\n                        style={{ listStyle: \"none\" }}\n                        onClick={() => onItemClick(itm, index)}\n                    >{`#${itm.name}`}</li>\n                ))}\n            </div>\n        </>\n    )\n}\n","import { WEBSITE_URL } from \"../../Constants/constants\"\n\nexport default function removeAssetUrl(str: string) {\n    console.log(WEBSITE_URL)\n\n    return str.replace(`${WEBSITE_URL}/`, \"\")\n}\n","import React, { ReactElement } from \"react\"\n\nimport Create from \"./Component/Create\"\nimport { DefaultContent } from \"../../../Controller/Main/ContentWithCommunities\"\nimport { Link } from \"react-router-dom\"\nimport { RefreshIcon } from \"../../../Shared/Images/Images\"\n\nconst CreatePost = (): ReactElement => {\n    return (\n        <DefaultContent>\n            <Create />\n        </DefaultContent>\n    )\n}\n\nexport const CommunityRules = (): ReactElement => {\n    return (\n        <React.Fragment>\n            <div className=\"mc-border\">\n                <div className=\"select-community-rules\">\n                    <div className=\"scr-wrap position-relative\">\n                        <span className=\"community-refresh-icon\">\n                            <img src={RefreshIcon} alt={\"Refresh\"} />\n                        </span>\n                        <span className=\"scr-link\">Select a Community to load their rules</span>\n                    </div>\n                </div>\n            </div>\n            <p className=\"content-policy-note py-4\">\n                Please be mindful of YES!HUB\n                <Link to=\"#\">content policy</Link>\n            </p>\n        </React.Fragment>\n    )\n}\n\nexport default CreatePost\n"],"sourceRoot":""}