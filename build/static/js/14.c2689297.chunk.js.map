{"version":3,"sources":["Views/Event/Details/Components/Details.tsx","Views/Event/Create/Component/EventInfo.tsx","Views/Post/Details/Components/CommentBox.tsx","Views/Post/Details/Components/CommentHeader.tsx","Views/Post/Details/Components/CommentItem.tsx","Views/Post/Details/Components/PostComments.tsx","Views/Event/Details/index.tsx"],"names":["pointStyle","font","weight","fontSize","EventDetails","event","onGoingChange","console","log","useState","eventState","seteventState","className","isModerator","to","pathname","state","icon","faEdit","style","fontWeight","color","eventName","id","FlagSvg","hostedBy","fasCalendar","marginLeft","dayjs","date","startDate","format","fasTimer","time","startTime","eventTitleDateInfo","images","length","src","alt","fasUser","author","userName","fasBookMark","fasMarker","marginTop","description","margin","marginBottom","lineHeight","characteristics","map","itm","index","link","href","url","target","marginRight","LinkIcon","title","SubEventInfo","subevents","subEvent","_id","going","eventId","onMarkGoing","subEventStyle","boxShadow","border","borderRadius","padding","key","endTime","diff","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","stroke-linecap","stroke-linejoin","EventInfo","React","isSaved","toggleSaved","formatTime","toLocaleString","address","city","country","coHostedBy","onClick","eventApi","save","then","type","item","ReportIcon","CommentBox","onChange","postId","data","submitUrl","isCommentAllowed","afterComment","values","setValues","useEffect","validate","body","buttonText","formId","afterSubmit","submitBtnWrapperClass","props","submitButtonClass","inputWrapperClass","name","rows","placeholder","value","CommentHeader","comment","userId","assetUrl","userImage","RemovedImage","relativeDate","createdAt","CommentItem","totalReplies","deleteReply","isMod","postID","useParams","repliesCount","setRepliesCount","showReplies","toggleShowReplies","page","setPage","isLiked","isVoted","toggleVote","upVoteCount","totalLiked","setTotalLikes","children","replies","setReplies","commentId","reply","setReply","isReplying","toggleReply","onDelete","PostCommentsService","delete","rep","filter","getCommentReplies","response","helpful","fillOpacity","strokeWidth","ReportBtn","faTrash","Row","Col","addComment","prevPage","PostComments","comments","fetchComments","hasMoreComments","allComments","setAllComments","Fragment","enter","down","delay","EventDetail","useLocation","setEvent","setComment","totalVotes","setComments","fetchById","getComments","res","c","docs","document","addEventListener","removeEventListener","asideRightContent","alert","isJoined","e","isComMod"],"mappings":"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","file":"static/js/14.c2689297.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faEdit, faLink, faCheck } from \"@fortawesome/free-solid-svg-icons\"\n\nimport FormCheckBox from \"../../../../Components/Form/FormCheckBox\"\n\nimport IEvent from \"../../../../Models/User/IEvent\"\nimport ellipsis from \"../../../../Helpers/Functions/ellipsis\"\nimport { getDay, formatTime } from \"../../../../Helpers/Date/time\"\nimport assetUrl from \"../../../../Helpers/Functions/assetUrl\"\nimport camelCaseToSentence from \"../../../../Helpers/Functions/camelCaseToWords\"\nimport InterestedEvent from \"../../../../Shared/HelperBtn/InterestedBtn\"\nimport {\n    FlagSvg,\n    person,\n    locationPoint,\n    starBookmark,\n    fasTimer,\n    fasCalendar,\n    fasUser,\n    fasMarker,\n    fasBookMark,\n} from \"../../../../Shared/Icons\"\nimport dayjs from \"dayjs\"\nimport { formatDate } from \"@fullcalendar/common\"\nimport { Col } from \"react-bootstrap\"\nimport EventGoingInterestedComponent from \"./EventGoingInterested\"\n\nexport interface EventDetailsProps {\n    event: IEvent | undefined\n    onGoingChange?: (itm: any) => void\n}\n\nconst pointStyle = {\n    font: \"Roboto\",\n    weight: \"400\",\n    fontSize: \"14px\",\n}\nconst EventDetails: React.FC<EventDetailsProps> = ({ event, onGoingChange }) => {\n    console.log(\"event: \", event)\n    const [eventState, seteventState] = useState<any>(event)\n\n    if (!event) {\n        return null\n    }\n\n    const eventTitleDateInfo = () => {\n        return (\n            <div className=\"event_metaInfo\">\n                <h2 style={{ fontSize: \"26px\", fontWeight: 700, color: \"243C4B, 100%\" }}>{eventState?.eventName}</h2>\n                <div className=\"metaInfo-container\">\n                    <div id=\"event-HostBy\">\n                        {FlagSvg} <span id=\"hostBy_Title\">Hosted by</span>\n                        <span id=\"hostedBy_Val\">{eventState?.hostedBy}</span>\n                    </div>\n                    <div id=\"event-DateTime\">\n                        <span>\n                            {fasCalendar}\n                            <span id=\"event-DateTime_date\" style={{ marginLeft: \"8px\" }}>\n                                {dayjs(eventState?.date?.startDate).format(\"DD MMM YYYY\")}\n                            </span>\n                        </span>\n                        <span>\n                            {fasTimer}\n                            <span id=\"event-DateTime_time\" style={{ marginLeft: \"8px\" }}>\n                                {dayjs(eventState?.time.startTime).format(\"hh:mm\")} GMT+8\n                            </span>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"event__details\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n                <h1 className=\"event__title\"></h1>\n                {event?.isModerator ? (\n                    <Link to={{ pathname: \"/event/create-update\", state: event }}>\n                        <FontAwesomeIcon icon={faEdit} />\n                    </Link>\n                ) : null}\n            </div>\n\n            <div className=\"mc-border p-3\">\n                {eventTitleDateInfo()}\n                {event?.images.length ? (\n                    <div className=\"event__img\">\n                        {/* <img src={assetUrl(event?.images[0])} alt={event?.eventName} /> */}\n                        <img\n                            src={\n                                \"https://ae01.alicdn.com/kf/HTB1a8SScrGYBuNjy0Foq6AiBFXao/HUAYI-Solid-Old-Master-photography-filming-booth-Backgrounds-Digital-Printed-Professional-Portrait-Studio-Photo-D8965.jpg_q50.jpg\"\n                            }\n                            alt={event?.eventName}\n                        />\n                    </div>\n                ) : null}\n\n                <div className=\"event__section\">\n                    <div className=\"row\">\n                        <div className=\"col-6 col-md-6 col-lg-6\">\n                            <div>\n                                {fasUser} <span style={pointStyle}>Created By {event?.author?.userName}</span>\n                            </div>\n                        </div>\n                        <div className=\"col-6 col-md-6 col-lg-6\">\n                            <div className=\"d-flex flex-column\">\n                                <div>\n                                    {fasBookMark} <span style={pointStyle}>{\"PHP 4000\"}</span>\n                                </div>\n                                <div>\n                                    {fasMarker} <span style={pointStyle}>{\"Online event\"}</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {/* <h6 className=\"event-head-text\">Description:</h6> */}\n                    <p style={{ marginTop: \"1em\" }} className=\"event-param-text\">\n                        {event?.description}\n                    </p>\n                </div>\n\n                <div className=\"event-param-text\" style={{ margin: \"0 .6em\" }}>\n                    <p\n                        style={{\n                            marginBottom: \"15px\",\n                            fontSize: \"16p\",\n                            fontWeight: 700,\n                            lineHeight: \"20px\",\n                            color: \"243C4B\",\n                        }}\n                    >\n                        Attributes\n                    </p>\n                    <div className=\"row\" style={{ marginLeft: \"20px\", marginBottom: \"1.4em\" }}>\n                        {eventState?.characteristics.map((itm: any, index: number) => (\n                            <div className=\"col-6 md-6 lg-6\">\n                                <li>{itm}</li>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"event-param-text\" style={{ margin: \"0 .6em\" }}>\n                    <p\n                        style={{\n                            marginBottom: \"15px\",\n                            fontSize: \"16p\",\n                            fontWeight: 700,\n                            lineHeight: \"20px\",\n                            color: \"243C4B\",\n                        }}\n                    >\n                        Related Link\n                    </p>\n                    <div className=\"d-flex flex-column\" style={{ marginLeft: \"20px\", marginBottom: \"1.4em\" }}>\n                        {eventState?.link.map((itm: any, index: number) => (\n                            <>\n                                <p>\n                                    <a href={itm.url} target=\"_blank\">\n                                        <span style={{ marginRight: \"1em\" }}>{LinkIcon}</span>\n                                        <span style={{ color: \"blue\" }}>{itm.title}</span>\n                                    </a>\n                                </p>\n                            </>\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"event-param-text\" style={{ margin: \"0 .6em\" }}>\n                    <p\n                        style={{\n                            marginBottom: \"15px\",\n                            fontSize: \"16p\",\n                            fontWeight: 700,\n                            lineHeight: \"20px\",\n                            color: \"243C4B\",\n                        }}\n                    >\n                        Event Details\n                    </p>\n                    <SubEventInfo subevents={eventState?.subEvent || []} />\n                </div>\n                <div className=\"event_goingInfo\"></div>\n\n                {event?._id && (\n                    <div className=\"d-flex flex-row justify-content-end\">\n                        <EventGoingInterestedComponent\n                            going={eventState?.going}\n                            eventId={eventState?._id}\n                            onMarkGoing={(going: any) => {\n                                if (onGoingChange) {\n                                    onGoingChange(going)\n                                }\n                                seteventState({ ...event, going: going })\n                            }}\n                        />\n                    </div>\n\n                    // <div className=\"event__section\">\n                    //     <div className=\"event-details-footer\">\n                    //         <div className=\"event-details\">\n                    //             <InterestedEvent isInterested={event.isSubscribed} type=\"event\" id={event._id} />\n\n                    //             <button onClick={() => {}} className=\"btn btn-warning icon__btn btn_going\">\n                    //                 <FontAwesomeIcon className=\"text-black\" icon={faCheck} />\n                    //                 <span>Going</span>\n                    //             </button>\n                    //         </div>\n                    //     </div>\n                    // </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default EventDetails\n\nexport const SubEventInfo: React.FC<any> = ({ subevents = [] }) => {\n    const subEventStyle = {\n        boxShadow: \"(0px 10px 20px rgba(0, 0, 0, 0.05))\",\n        border: \"1px solid #E6E6E6\",\n        borderRadius: \"10px\",\n        padding: \"1em\",\n        marginBottom: \"1em\",\n    }\n\n    return (\n        <>\n            {subevents.map((itm: any, index: number) => (\n                <div className=\"subevent\" key={index} style={subEventStyle}>\n                    <p\n                        style={{\n                            marginBottom: \"5px\",\n                            fontSize: \"16p\",\n                            fontWeight: 700,\n                            lineHeight: \"20px\",\n                            color: \"243C4B\",\n                        }}\n                    >\n                        {itm.title}, {dayjs(itm.endTime).diff(dayjs(itm.startTime), \"hour\", true)} hours\n                    </p>\n                    <div className=\"d-flex\" style={{ marginBottom: \"10px\" }}>\n                        <span style={{ ...pointStyle, marginRight: \"2em\" }}>\n                            {fasCalendar} {dayjs(itm.date.startDate).format(\"DD MMM YYYY\")}\n                        </span>\n                        <span style={pointStyle}>\n                            {fasTimer} {dayjs(itm.startTime.startDate).format(\"hh:mmAZ[Z]\")}\n                        </span>\n                    </div>\n                    <p>{itm.description}</p>\n                </div>\n            ))}\n        </>\n    )\n}\n\nexport const LinkIcon = (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M9.02953 6.96966C8.48346 6.42382 7.74297 6.11719 6.97087 6.11719C6.19877 6.11719 5.45827 6.42382 4.9122 6.96966L2.85287 9.02833C2.30678 9.57441 2 10.3151 2 11.0873C2 11.8596 2.30678 12.6003 2.85287 13.1463C3.39895 13.6924 4.13959 13.9992 4.91187 13.9992C5.68414 13.9992 6.42479 13.6924 6.97087 13.1463L8.0002 12.117\"\n            stroke=\"black\"\n            stroke-width=\"1.33333\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n        />\n\n        <path\n            d=\"M6.9707 9.02953C7.51677 9.57538 8.25727 9.88201 9.02937 9.88201C9.80147 9.88201 10.542 9.57538 11.088 9.02953L13.1474 6.97087C13.6935 6.42479 14.0002 5.68414 14.0002 4.91187C14.0002 4.13959 13.6935 3.39895 13.1474 2.85287C12.6013 2.30678 11.8606 2 11.0884 2C10.3161 2 9.57545 2.30678 9.02937 2.85287L8.00004 3.8822\"\n            stroke=\"black\"\n            stroke-width=\"1.33333\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n        />\n    </svg>\n)\n","import * as React from \"react\"\nimport SharedBtn from \"../../../../Shared/HelperBtn/SharedBtn\"\nimport { ReportIcon } from \"../../../../Shared/Icons\"\n\nimport IEvent from \"../../../../Models/User/IEvent\"\nimport { formatTime } from \"../../../../Helpers/Date/time\"\n\nimport eventApi from \"./../../../../Helpers/Request/Services/Event/Event\"\n\nexport interface EventInfoProps {\n    event: IEvent\n}\n\nconst EventInfo: React.FC<any> = ({ event }) => {\n    const [isSaved, toggleSaved] = React.useState(false)\n\n    const onSaveEvent = () => {\n        eventApi.save(event._id).then(() => {\n            toggleSaved(!isSaved)\n        })\n    }\n\n    return (\n        <div className=\"event__info mc-border mt-lg-0\">\n            <h6 className=\"heading-6 ad__title\">Event Details</h6>\n            <div className=\"event-detail-data\">\n                <div className=\"d-flex mb-3\">\n                    <div className=\"left\">\n                        <span className=\"event-head-text\">Date</span>\n                    </div>\n                    <div className=\"right\">\n                        <span className=\"event-param-text\">\n                            {formatTime(event?.date.startDate.toLocaleString() || \"\", \"DD MMM YYYY\")}\n                        </span>\n                    </div>\n                </div>\n                <div className=\"d-flex mb-3\">\n                    <div className=\"left\">\n                        <span className=\"event-head-text\">Time</span>\n                    </div>\n                    <div className=\"right\">\n                        <span className=\"event-param-text\">\n                            {formatTime(event?.time?.startTime.toLocaleString() || \"\")} to{\" \"}\n                            {formatTime(event?.time?.endTime || \"\")}\n                        </span>\n                    </div>\n                </div>\n\n                <div className=\"d-flex mb-3\">\n                    <div className=\"left\">\n                        <span className=\"event-head-text\">Address</span>\n                    </div>\n                    <div className=\"right\">\n                        <span className=\"event-param-text\">{event?.address || \"\"}</span>\n                    </div>\n                </div>\n\n                <div className=\"d-flex mb-3\">\n                    <div className=\"left\">\n                        <span className=\"event-head-text\">City</span>\n                    </div>\n                    <div className=\"right\">\n                        <span className=\"event-param-text\">{event?.city}</span>\n                    </div>\n                </div>\n\n                <div className=\"d-flex mb-3\">\n                    <div className=\"left\">\n                        <span className=\"event-head-text\">Country</span>\n                    </div>\n                    <div className=\"right\">\n                        <span className=\"event-param-text\">{event?.country}</span>\n                    </div>\n                </div>\n\n                <div className=\"d-flex mb-3\">\n                    <div className=\"left\">\n                        <span className=\"event-head-text\">Host</span>\n                    </div>\n                    <div className=\"right\">\n                        <span className=\"event-param-text\">{event?.hostedBy}</span>\n                    </div>\n                </div>\n                <div className=\"d-flex mb-3\">\n                    <div className=\"left\">\n                        <span className=\"event-head-text\">Co-Host</span>\n                    </div>\n                    <div className=\"right\">\n                        <span className=\"event-param-text\">{event?.coHostedBy}</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"form-group mb-0\">\n                <button className=\"btn btn-view\" onClick={onSaveEvent}>\n                    {isSaved ? \"Unsave\" : \"Save\"} Event\n                </button>\n                <div className=\"w-100 mt-2 align-items-center d-flex justify-content-between\">\n                    <SharedBtn type=\"event\" item={event} />\n\n                    <div className=\"report--icon\">\n                        {ReportIcon}\n                        <div className=\"text\">Report</div>\n                    </div>\n                </div>\n            </div>\n            {/* ) : (\n                <button className=\"btn btn-view\">Sign in to save event</button>\n            )} */}\n        </div>\n    )\n}\n\nexport default EventInfo\n","import React, { FC, useEffect, useState } from \"react\"\n\nimport Form from \"../../../../Components/Form/Form\"\nimport FormInput from \"../../../../Components/Form/FormInput\"\n\ntype CommentBox = {\n    onChange: Function\n    // data: Record<string, string | number>\n    data: string\n    postId: any\n    submitUrl: string\n    isCommentAllowed: boolean\n    afterComment?: (data?: any) => void\n}\n\nconst CommentBox: FC<CommentBox> = ({ onChange, postId, data, submitUrl, isCommentAllowed = true, afterComment }) => {\n    const [values, setValues] = useState(data)\n\n    useEffect(() => {\n        setValues(data);\n    }, [data])\n\n\n    const commentSuccess = (data: any) => {\n        console.log('comment success', data);\n        if(afterComment) \n        afterComment(data.body);\n    }\n\n\n    return isCommentAllowed ? (\n        <div className=\"mc-border p-2 mt-4\">\n            <div className=\"cp-form p-0\">\n                <div className=\"form-group mb-0\">\n                    <Form\n                        validate\n                        className=\"d-flex align-items-center comment__form\"\n                        submitUrl={submitUrl}\n                        data={{body: data, postId: postId}}\n                        buttonText=\"Comment\"\n                        formId={\"comment\"}\n                        afterSubmit={commentSuccess}\n                        submitBtnWrapperClass=\"\"\n                        props={{\n                            submitButtonClass: \"btn btn-signup comment__btn\",\n                        }}\n                    >\n                        <FormInput\n                            className=\"form-control form-input2\"\n                            inputWrapperClass=\"form-group comment__input\"\n                            onChange={onChange}\n                            name=\"body\"\n                            props={{\n                                rows: \"2\",\n                                placeholder: \"Write your comment..\",\n                                value: values,\n                            }}\n                        />\n                    </Form>\n                </div>\n            </div>\n        </div>\n    ) : null\n}\n\nexport default CommentBox\n","import * as React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport assetUrl from \"../../../../Helpers/Functions/assetUrl\"\nimport relativeDate from \"../../../../Helpers/Date/relativeDate\"\nimport { CommentReplies } from \"../../../../Interface/Comments/CommentsInterface\"\nimport isBaseImg from \"../../../../Helpers/Functions/isBaseImg\"\nimport { RemovedImage } from \"../../../../Shared/Images/Images\"\n\nexport interface CommentHeaderProps {\n    comment: CommentReplies\n}\n\nconst CommentHeader: React.SFC<CommentHeaderProps> = ({ comment }) => {\n    return (\n        <div className=\"post-header d-flex justify-content-between\">\n            <div className=\"post-head-detail d-flex\">\n                <Link to={`${comment.userId ? `/profile/${comment?.userId?._id}` : null}`}>\n                    <div className=\"post-detail pl-0 d-flex\">\n                        <div className=\"profile-image\">\n                            <img\n                                src={\n                                    // isBaseImg(comment.userId?.userImage)\n                                    //     ? comment.userId?.userImage\n                                    //     :\n                                    comment.userId ? assetUrl(comment.userId?.userImage) : RemovedImage\n                                }\n                                alt={comment.userId?.userName || \"User Removed\"}\n                            />\n                        </div>\n                        <div className=\"post-in\">Reply by :</div>\n                        <div className=\"post-in  ml-1\">\n                            {\" \"}\n                            {comment.userId ? comment.userId?.userName : \"User Removed\"}\n                        </div>\n                    </div>\n                </Link>\n            </div>\n            <div className=\"post-time \">\n                <div className=\"post-in\">{relativeDate(comment.createdAt)}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default CommentHeader\n","import * as React from \"react\"\nimport { AxiosResponse } from \"axios\"\nimport { Row, Col } from \"react-bootstrap\"\nimport { useParams } from \"react-router-dom\"\n\nimport ReportBtn from \"../../../../Shared/HelperBtn/ReportBtn\"\nimport CommentHeader from \"./CommentHeader\"\n\nimport { CommentReplies } from \"../../../../Interface/Comments/CommentsInterface\"\nimport { PostCommentsService } from \"../../../../Helpers/Request/Services/Comments/PostComments\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\"\nimport { userId } from \"../../../../Constants/getUserId\"\n\nexport interface CommentItemProps {\n    isMod: boolean\n    comment: CommentReplies\n    totalReplies: number\n    isCommentAllowed: boolean\n    deleteReply: (id: string) => void\n    postID?: string\n}\n\nconst CommentItem: React.FC<CommentItemProps> = ({\n    comment,\n    totalReplies = 0,\n    isCommentAllowed = true,\n    deleteReply,\n    isMod,\n    postID,\n}) => {\n    const { id: pId } = useParams()\n    const [repliesCount, setRepliesCount] = React.useState(totalReplies)\n    const [showReplies, toggleShowReplies] = React.useState(true)\n    const [page, setPage] = React.useState(1)\n    const [isVoted, toggleVote] = React.useState(!!comment.isLiked)\n    const [totalLiked, setTotalLikes] = React.useState(comment.upVoteCount)\n    const [replies, setReplies] = React.useState<CommentReplies[]>(comment.children || [])\n    const [reply, setReply] = React.useState({\n        body: \"\",\n        commentId: comment._id,\n        postId: postID,\n    })\n    const [isReplying, toggleReply] = React.useState(false)\n\n    const postCommentReply = () => {\n        // if (reply.commentId) delete reply.postId\n\n        PostCommentsService.addComment(reply).then(response => {\n            setReplies([...replies, response.data.body])\n            setRepliesCount(repliesCount + 1)\n            toggleReply(false)\n        })\n    }\n\n    const onDelete = (id: string) => {\n        PostCommentsService.delete(id, isMod).then(() => {\n            const rep = replies.filter(reply => reply._id !== id)\n            setReplies(rep)\n            setRepliesCount(repliesCount - 1)\n        })\n    }\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setReply({ ...reply, [event.target.name]: event.target.value })\n    }\n\n    const getReplies = () => {\n        setPage(prevPage => prevPage + 1)\n    }\n\n    const getCommentReplies = () => toggleShowReplies(!showReplies)\n\n    React.useEffect(() => {\n        PostCommentsService.getCommentReplies(comment._id, {}, page).then((response: AxiosResponse) => {\n            setReplies([...replies, ...(response.data.data || [])])\n            toggleShowReplies(true)\n        })\n        // eslint-disable-next-line\n    }, [page])\n\n    const toggleReplyButton = () => toggleReply(!isReplying)\n\n    const onVote = () => {\n        PostCommentsService.helpful(comment._id, isVoted).then(() => {\n            setTotalLikes(isVoted ? totalLiked - 1 : totalLiked + 1)\n            toggleVote(!isVoted)\n        })\n    }\n\n    return (\n        <div className=\"post-container comment__item\">\n            <div className=\"main-data pt-4\">\n                <div className=\"post-wrap\">\n                    <div className=\"post-body\">\n                        <div className=\"ps-left\">\n                            <div className=\"left-wrapper\">\n                                <CommentHeader comment={comment} />\n                                <p className=\"general-text\">{comment.body}</p>\n                                <div className=\"post-footer\">\n                                    <div className=\"lefts\">\n                                        <div className=\"post-reply pointer\" onClick={onVote}>\n                                            <span>{totalLiked}</span>\n                                            <svg width={20} height={20} viewBox=\"0 0 40 58\" className=\"\">\n                                                <path\n                                                    d=\"M23.75 0C23.75 0 25.6 7.20581 25.6 13.052C25.6 18.6535 22.225 23.1946 17.075 23.1946C11.9 23.1946 8 18.6535 8 13.052L8.075 12.0731C3.025 18.5992 0 27.0558 0 36.2466C0 48.2654 8.95 58 20 58C31.05 58 40 48.2654 40 36.2466C40 21.5902 33.525 8.51102 23.75 0ZM19.275 49.8425C14.825 49.8425 11.225 46.0356 11.225 41.3043C11.225 36.8992 13.85 33.7993 18.25 32.8204C22.675 31.8415 27.25 29.5302 29.8 25.805C30.775 29.3127 31.275 33.0108 31.275 36.7904C31.275 43.9963 25.9 49.8425 19.275 49.8425Z\"\n                                                    fill=\"#243C4B\"\n                                                    fillOpacity={isVoted ? 1 : 0.6}\n                                                />\n                                            </svg>\n                                            <span className=\"text\">Helpful{!isVoted ? \"?\" : \"\"}</span>\n                                        </div>\n                                        <div className=\"post-reply\" onClick={toggleReplyButton}>\n                                            <span className=\"icon\">\n                                                <svg\n                                                    className=\"comment--icon\"\n                                                    viewBox=\"0 0 24 24\"\n                                                    fill=\"none\"\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                >\n                                                    <path\n                                                        d=\"M20.8 1H3.2C1.99 1 1 1.99 1 3.2V23L5.4 18.6H20.8C22.01 18.6 23 17.61 23 16.4V3.2C23 1.99 22.01 1 20.8 1ZM20.8 16.4H5.4L3.2 18.6V3.2H20.8V16.4Z\"\n                                                        fill=\"#243C4B\"\n                                                        stroke=\"#243C4B\"\n                                                        strokeWidth=\"0.5\"\n                                                    />\n                                                </svg>\n                                            </span>\n                                            <span className=\"text\">\n                                                {repliesCount ? (\n                                                    <span className=\"badge badge-lg badge-info\">{repliesCount}</span>\n                                                ) : (\n                                                    \"Reply\"\n                                                )}\n                                            </span>\n                                        </div>\n                                        {repliesCount !== 0 ? (\n                                            <span className=\"replyCount\" id={comment._id} onClick={getCommentReplies}>\n                                                {showReplies ? \"Hide Replies\" : `+${repliesCount} Replies`}\n                                            </span>\n                                        ) : null}\n                                    </div>\n                                    <div className=\"rights\">\n                                        <ReportBtn type=\"comment\" id={comment._id} />\n                                        {comment?.userId?._id === userId || isMod ? (\n                                            <div className=\"post-hide pointer\" onClick={() => deleteReply(comment._id)}>\n                                                <FontAwesomeIcon icon={faTrash} className=\"icon\" />\n                                                <span className=\"text\">Delete</span>\n                                            </div>\n                                        ) : null}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {isReplying && isCommentAllowed ? (\n                <div className=\"pl-3\">\n                    <div className=\"mc-border p-2 mt-3\">\n                        <Row className=\"align-items-center\">\n                            <Col className=\"flex-1\">\n                                <input\n                                    name=\"body\"\n                                    id=\"body\"\n                                    className=\"form-control form-input2\"\n                                    type=\"text\"\n                                    placeholder=\"Comment Reply\"\n                                    onChange={handleChange}\n                                    value={reply.body}\n                                />\n                            </Col>\n                            <div style={{ width: \"130px\" }}>\n                                <button type=\"button\" className={\"btn btn-md btn-signup\"} onClick={postCommentReply}>\n                                    Reply\n                                </button>\n                            </div>\n                        </Row>\n                    </div>\n                </div>\n            ) : null}\n            {showReplies && (\n                <React.Fragment>\n                    {replies.map(reply => (\n                        <CommentItem\n                            isMod={isMod}\n                            deleteReply={onDelete}\n                            isCommentAllowed={isCommentAllowed}\n                            comment={reply}\n                            totalReplies={reply.repliesCount}\n                            key={reply._id}\n                            postID={postID}\n                        />\n                    ))}\n                    {repliesCount > replies.length ? (\n                        <div className=\"text-center\">\n                            <button onClick={getReplies} className=\"text-muted btn font-weight-bold show__more-btn\">\n                                Load More\n                            </button>\n                        </div>\n                    ) : null}\n                </React.Fragment>\n            )}\n        </div>\n    )\n}\n\nexport default CommentItem\n","import React, { FC, useEffect, useState } from \"react\"\nimport { CommentReplies } from \"../../../../Interface/Comments/CommentsInterface\"\nimport CommentItem from \"./CommentItem\"\nimport { PostCommentsService } from \"../../../../Helpers/Request/Services/Comments/PostComments\"\n\n//@ts-ignore\nimport { Fade, Bounce} from 'react-reveal';\n\ntype PostComments = {\n    isMod: boolean\n    comments: CommentReplies[]\n    isCommentAllowed: boolean\n    fetchComments: () => void\n    hasMoreComments: boolean\n    postId?:string \n}\n\nconst PostComments: FC<PostComments> = ({\n    comments,\n    isCommentAllowed,\n    fetchComments,\n    hasMoreComments = true,\n    isMod = false,\n}) => {\n    const [allComments, setAllComments] = useState<CommentReplies[]>([...comments])\n\n    useEffect(() => {\n        console.log('checking comments ', comments)\n        setAllComments(comments)\n    }, [comments])\n\n    const onDelete = (id: string) => {\n        PostCommentsService.delete(id, isMod).then(() => {\n            const rep = allComments.filter(reply => reply._id !== id)\n            setAllComments(rep)\n        })\n    }\n \n    // const [] = useState<Record<string, any>>({})\n\n    return (\n        <React.Fragment>\n            {allComments.map(item => (\n                <Fade enter={true} down delay={300}>\n                    <CommentItem\n                        isMod={isMod}\n                        deleteReply={onDelete}\n                        isCommentAllowed={isCommentAllowed}\n                        key={item._id}\n                        comment={item}\n                        totalReplies={item.repliesCount}\n                        postID={item.postId} />\n                </Fade>\n            ))}\n            {hasMoreComments ? (\n                <div className=\"text-center\">\n                    <button onClick={fetchComments} className=\"text-muted btn font-weight-bold show__more-btn\">\n                        Load More\n                    </button>\n                </div>\n            ) : null}\n        </React.Fragment>\n    )\n}\n\nexport default PostComments\n","import React, { useState, useEffect, ChangeEvent } from \"react\"\n\nimport MainContent from \"../../../Controller/Main/Content\"\nimport EventDetails from \"./Components/Details\"\nimport EventInfo from \"../Create/Component/EventInfo\"\nimport EventModerators from \"../Create/Component/EventModerators\"\nimport { useLocation, useParams } from \"react-router-dom\"\nimport IEvent from \"../../../Models/User/IEvent\"\nimport eventApi from \"../../../Helpers/Request/Services/Event/Event\"\nimport CommentBox from \"../../Post/Details/Components/CommentBox\"\nimport PostComments from \"../../Post/Details/Components/PostComments\"\nimport EventModeratorListSidebar from \"../Create/Component/EventModeratorListSidebar\"\nimport { isEventEditAllowed } from \"../../../Helpers/Functions/isAllowed\"\nconst EventDetail = () => {\n    const { state } = useLocation<any>()\n    const { id } = useParams()\n    const [page, setPage] = useState(1)\n    const [event, setEvent] = useState<IEvent>()\n    const [comment, setComment] = useState({\n        eventId: id,\n        body: \"\",\n    })\n\n    const [comments, setComments] = useState<any>({\n        comments: [],\n        totalVotes: 0,\n        totalReplies: 0,\n    })\n\n    useEffect(() => {}, [])\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target\n        setComment({ ...comment, [name]: value })\n    }\n\n    useEffect(() => {\n        eventApi.fetchById(id).then(response => {\n            setEvent({ ...response.data.data })\n        })\n    }, [id])\n\n    const getComments = () => setPage(page + 1)\n\n    useEffect(() => {\n        eventApi.fetchComments(id || \"\", page).then(response => {\n            if (response) {\n                const res = response.data.body\n                setComments((c: any) => ({\n                    ...c,\n                    comments: [...c.comments, ...res.docs],\n                }))\n                setComment(c => ({\n                    ...c,\n                    body: \"\",\n                }))\n            }\n        })\n    }, [page, id])\n\n    useEffect(() => {\n        document.addEventListener(\"comment-success\", getComments)\n        return () => document.removeEventListener(\"comment-success\", getComments)\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <MainContent\n            asideRightContent={\n                <>\n                    {event && (\n                        <>\n                            <EventInfo event={event} />\n                            {/* {isEventEditAllowed(event) ? (\n                                <EventModeratorListSidebar eventID={event._id} eventTitle={event.eventName} />\n                            ) : null}\n                            <EventModerators event={event} /> */}\n                        </>\n                    )}\n                </>\n            }\n        >\n            {event && (\n                <EventDetails\n                    onGoingChange={going => {\n                        alert(\"changed\")\n                        setEvent({ ...event, going: going })\n                    }}\n                    event={event}\n                />\n            )}\n            <CommentBox\n                isCommentAllowed={!!event?.isJoined}\n                onChange={onChange}\n                postId={comment.eventId}\n                data={comment.body}\n                submitUrl={\"comment/to/event\"}\n            />\n            <PostComments\n                isMod={!!event?.isComMod}\n                hasMoreComments={comments.totalReplies > comments.comments.length}\n                fetchComments={getComments}\n                isCommentAllowed={!!event?.isJoined}\n                comments={comments.comments}\n            />\n        </MainContent>\n    )\n}\n\nexport default EventDetail\n"],"sourceRoot":""}