{"version":3,"sources":["Controller/Home/Announcement/newDesign/Index.tsx","Views/Profile/Events/Components/EventsItems.tsx","Controller/Home/Posts/Items.tsx","Views/Profile/Saved/index.tsx"],"names":["Announcement","event","link","useState","going","isGoing","setisGoing","className","onMarkGoing","EventsItems","events","map","item","key","_id","PostsItems","feeds","topMargin","isUser","loading","awards","hideAward","Post","idx","type","NewsFeedEvent","PostItem","post","SavedFeeds","savedPosts","setSavedPosts","savedEvents","setSavedEvents","useEffect","getUserPosts","saved","then","response","data","docs","onSaveToggled","s","filter","e","detail","id","onSaveToggleEvent","document","addEventListener","SAVED_POST_EVENT","removeEventListener","SAVED_EVENT_EVENT","Profile","FormHeader","title","showDrafts","role","exact","activeClassName","to","path","render"],"mappings":"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","file":"static/js/24.c4eb1d6f.chunk.js","sourcesContent":["import React, { FC, useState } from \"react\"\n\nimport IEvent from \"../../../../Models/User/IEvent\"\nimport EventBody from \"./EventBody\"\n\nexport interface Announcement {\n    event: IEvent\n    link?: string\n}\n\nconst Announcement: FC<Announcement> = ({ event, link }) => {\n    const [eventItem, seteventItem] = useState(event)\n    const [isGoing, setisGoing] = useState(event.going)\n    return (\n        <div className=\"event-card-container pt-3\">\n            <div className=\"event-card-wrap\">\n                {event && (\n                    <EventBody\n                        event={event}\n                        going={isGoing}\n                        onMarkGoing={(going: any) => setisGoing(going)}\n                        link={link}\n                    />\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Announcement\n","import React, { FC } from \"react\"\n\nimport Announcement from \"../../../../Controller/Home/Announcement/newDesign/Index\"\nimport EventsInterface from \"../../../../Interface/Events/EventsInterface\"\n\nconst EventsItems: FC<EventsInterface> = ({ events = [] }) => {\n    return (\n        <div className=\"profile_events__container\">\n            {events.map(item => (\n                <Announcement key={item._id} event={item} />\n            ))}\n        </div>\n    )\n}\n\nexport default EventsItems\n","import React, { FC, Fragment } from \"react\"\n\nimport PostSkeletons from \"../../../Components/Skeleton/Post\"\nimport FeedsInterface from \"../../../Interface/Home/FeedsInterface\"\nimport PostItem from \"./PostItem\"\nimport NewsFeedEvent from \"../Announcement/NewsFeedEvent\"\n \nconst PostsItems: FC<FeedsInterface> = ({\n    feeds = [],\n    topMargin = true,\n    isUser = false,\n    loading = false,\n    awards = [],\n    hideAward,\n}) => {\n    return (\n        <>\n            {loading ? (\n                <PostSkeletons />\n            ) : (\n                feeds.map((item, idx) => (\n                    <Fragment key={item._id}>\n                        {item.type && item.type === 2 ? (\n                            <NewsFeedEvent event={item} />\n                        ) : (\n                            <PostItem\n                                post={item}\n                                topMargin={topMargin}\n                                isUser={isUser}\n                                idx={idx}\n                                awards={awards}\n                                hideAward={hideAward}\n                            />\n                        )}\n                    </Fragment>\n                ))\n            )}\n        </>\n    )\n}\n\nexport default PostsItems\n","import React, { useState, useEffect } from \"react\"\n\nimport Profile from \"..\"\nimport FormHeader from \"../../../Container/Top/FormHeader\"\nimport PostsItems from \"../../../Controller/Home/Posts/Items\"\nimport getUserPosts from \"../../../Helpers/Request/Services/Profile/GetUserPosts\"\nimport { SAVED_POST_EVENT, SAVED_EVENT_EVENT } from \"../../../Constants/constants\"\nimport { NavLink, Switch, Route } from \"react-router-dom\"\nimport EventsItems from \"../Events/Components/EventsItems\"\nimport IEvent from \"../../../Models/User/IEvent\"\nimport { FeedType } from \"../../../Interface/Home/FeedsInterface\"\n\nconst SavedFeeds = () => {\n    const [savedPosts, setSavedPosts] = useState<FeedType[]>([])\n    const [savedEvents, setSavedEvents] = useState<IEvent[]>([])\n\n    useEffect(() => {\n        getUserPosts.saved().then(response => {\n            setSavedPosts([...response.data.data.docs])\n        })\n\n        getUserPosts.savedEvents().then(response => {\n            setSavedEvents(response.data.data)\n        })\n\n        // eslint-disable-next-line\n    }, [])\n\n    const onSaveToggled = (event: any) => {\n        const s = savedPosts.filter((e: FeedType) => e._id !== event.detail.id)\n        setSavedPosts([...s])\n    }\n\n    const onSaveToggleEvent = (event: any) => {\n        const e = savedEvents.filter((e: IEvent) => e._id !== event.detail.id)\n        setSavedEvents([...e])\n    }\n\n    useEffect(() => {\n        document.addEventListener(SAVED_POST_EVENT, onSaveToggled)\n        return () => document.removeEventListener(SAVED_POST_EVENT, onSaveToggled)\n        // eslint-disable-next-line\n    }, [savedPosts])\n\n    useEffect(() => {\n        document.addEventListener(SAVED_EVENT_EVENT, onSaveToggleEvent)\n        return () => document.removeEventListener(SAVED_EVENT_EVENT, onSaveToggleEvent)\n        // eslint-disable-next-line\n    }, [savedEvents])\n\n    return (\n        <Profile>\n            <div className=\"profile-wrap\">\n                <FormHeader title=\"Saved\" showDrafts={false} />\n\n                <div className=\"mc-border py-2 mt-2\">\n                    <div className=\"profile-tabs\">\n                        <div className=\"d-flex justify-content-between align-items-center\">\n                            <ul className=\"nav profile-tabs-nav flex-nowrap\" role=\"tablist\">\n                                <li className=\"nav-item\">\n                                    <NavLink className=\"nav-link\" exact activeClassName=\"active\" to=\"/profile/saved\">\n                                        Posts\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/profile/saved/events\">\n                                        Events\n                                    </NavLink>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n                <Switch>\n                    <Route path=\"/profile/saved/events\" render={() => <EventsItems events={savedEvents} />} />\n                    <Route\n                        path=\"/profile/saved\"\n                        render={() => <PostsItems feeds={savedPosts} awards={[]} hideAward={true} />}\n                    />\n                </Switch>\n            </div>\n        </Profile>\n    )\n}\n\nexport default SavedFeeds\n"],"sourceRoot":""}