{"version":3,"sources":["Shared/HelperBtn/JoinBtn.tsx","Views/Groups/List/Items/index.tsx","Views/Groups/List/index.tsx"],"names":["JoinBtn","communityId","isJoined","isPending","name","React","hasJoined","setJoined","dispatchEvent","data","document","CustomEvent","COMMUNITY_JOIN_TOGGLE_EVENT","detail","community","type","disabled","className","onClick","CommunitiesList","leaveCommunity","then","ReactGA","event","category","action","label","nonInteraction","joinCommunity","response","isJoinPending","Community","item","to","pathname","_id","state","src","logo","assetUrl","PostedImage","alt","id","totalMembers","description","Items","communities","map","idx","key","Groups","singleView","useState","setCommunities","useEffect","isLoggedIn","fetchAll","docs","onCommunityJoinToggle","com","addEventListener","removeEventListener"],"mappings":"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","file":"static/js/4.580ec00a.chunk.js","sourcesContent":["import * as React from \"react\"\nimport CommunitiesList from \"../../Helpers/Request/Services/Communities/Communities\"\nimport { COMMUNITY_JOIN_TOGGLE_EVENT } from \"../../Constants/constants\"\nimport ReactGA from \"react-ga\"\nexport interface JoinBtnProps {\n    communityId: string\n    isJoined: boolean\n    isPending: boolean\n    name: string\n}\n\nexport type JoinStatus = {\n    isJoined: boolean\n    isPending: boolean\n}\n\nconst JoinBtn: React.FC<JoinBtnProps> = ({ communityId, isJoined, isPending, name }) => {\n    const [hasJoined, setJoined] = React.useState({\n        isJoined,\n        isPending,\n    })\n\n    const dispatchEvent = (data: JoinStatus) => {\n        document.dispatchEvent(\n            new CustomEvent(COMMUNITY_JOIN_TOGGLE_EVENT, {\n                detail: {\n                    ...data,\n                    community: communityId,\n                },\n            })\n        )\n    }\n\n    const toggleCommunity = () => {\n        if (hasJoined.isJoined) {\n            CommunitiesList.leaveCommunity(communityId).then(() => {\n                const data = {\n                    isJoined: false,\n                    isPending: false,\n                }\n                dispatchEvent(data)\n                setJoined(data)\n                ReactGA.event({\n                    category: \"user\",\n                    action: \"leaved\",\n                    label: name,\n                    nonInteraction: false,\n                })\n            })\n        } else if (!hasJoined.isPending) {\n            CommunitiesList.joinCommunity(communityId).then(response => {\n                const data = {\n                    isJoined: response.data.isJoined,\n                    isPending: response.data.isJoinPending,\n                }\n                dispatchEvent(data)\n                ReactGA.event({\n                    category: \"user\",\n                    action: \"joined\",\n                    label: name,\n                    nonInteraction: false,\n                })\n                setJoined(data)\n            })\n        }\n    }\n\n    React.useEffect(() => {\n        setJoined(data => ({ ...data, isPending }))\n    }, [isPending])\n\n    React.useEffect(() => {\n        setJoined(data => ({ ...data, isJoined }))\n    }, [isJoined])\n\n    return (\n        <button type=\"button\" disabled={hasJoined.isPending} className=\"btn btn-join\" onClick={toggleCommunity}>\n            {hasJoined.isJoined ? \"Leave Community\" : hasJoined.isPending ? \"Pending\" : \"Join Community\"}\n        </button>\n    )\n}\n\nexport default JoinBtn\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport IGroups from \"../../../../Interface/Groups/GroupsInterface\"\nimport { PostedImage } from \"../../../../Shared/Images/Images\"\nimport JoinBtn from \"../../../../Shared/HelperBtn/JoinBtn\"\nimport assetUrl from \"../../../../Helpers/Functions/assetUrl\"\n\nconst Items: React.FC<IGroups> = ({ communities = [] }) => {\n    return (\n        <div className=\"mc-mid pt-lg-0 pt-5\">\n            {/* <div className=\"mc-border\">\n                <div className=\"top-communities\">\n                    <div className=\"top-communities-list\">\n                        <h6 className=\"heading-6 bb-1 pb-3\">Today's top Growing Communities</h6>\n                        <div className=\"list-unstyled\"> */}\n            {communities.map((item, idx) => (\n                <Community key={idx} item={item} />\n                // <li key={idx}>\n                //     <div className=\"d-flex justify-content-between\">\n                //         <Link\n                //             to={{\n                //                 pathname: `/community/details/${item._id}`,\n                //                 state: item,\n                //             }}\n                //         >\n                //             <div>\n                //                 <span className={`${item.id ? \"hrate\" : \"mrate\"} rating`} />\n                //                 <span className=\"profile-image\">\n                //                     <img\n                //                         src={item.logo ? assetUrl(item.logo) : PostedImage}\n                //                         alt={\"PostedBy\"}\n                //                     />\n                //                 </span>\n                //                 <span className=\"title\"> {item.name} </span>\n                //             </div>\n                //         </Link>\n                //         <JoinBtn\n                //             communityId={item._id}\n                //             isJoined={item.isJoined || false}\n                //             isPending={item.isJoinPending || false}\n                //             name={item.name}\n                //         />\n                //     </div>\n                //     <p className=\"pt-2 community-list-description\">{item.description}</p>\n                // </li>\n            ))}\n            {/* </div>\n                    </div>\n                </div>\n            </div> */}\n        </div>\n    )\n}\n\nconst Community = ({ item }: any) => {\n    return (\n        <div className=\"card__layout\">\n            <div className=\"community__header\">\n                <Link\n                    to={{\n                        pathname: `/community/details/${item._id}`,\n                        state: item,\n                    }}\n                >\n                    <div className=\"community__header_left\">\n                        <span>\n                            <img src={item.logo ? assetUrl(item.logo) : PostedImage} alt={\"PostedBy\"} />\n                        </span>\n                        <span className=\"title\">\n                            <span id=\"title_text\">{item.name}</span>\n\n                            <p id=\"members_row\">{item.totalMembers} members</p>\n                        </span>\n                    </div>\n                </Link>\n                <div className=\"community__header_right\">\n                    <JoinBtn\n                        communityId={item._id}\n                        isJoined={item.isJoined || false}\n                        isPending={item.isJoinPending || false}\n                        name={item.name}\n                    />\n                </div>\n            </div>\n            <div className=\"community__body\">\n                <p className=\"pt-2\">{item.description}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Items\n","import React, { FC, useEffect, useState } from \"react\"\n\nimport CommunitiesList from \"../../../Helpers/Request/Services/Communities/Communities\"\nimport Items from \"./Items\"\nimport { DefaultContent } from \"../../../Controller/Main/ContentWithCommunities\"\nimport { isLoggedIn } from \"../../../Hooks/Auth/getAuth\"\nimport { COMMUNITY_JOIN_TOGGLE_EVENT } from \"../../../Constants/constants\"\n\nexport interface GroupInterface {\n    singleView?: any\n}\n\nconst Groups: React.FC<GroupInterface> = ({ singleView }) => {\n    const [communities, setCommunities] = useState<any>([])\n\n    useEffect(() => {\n        isLoggedIn &&\n            CommunitiesList.fetchAll().then(response => {\n                setCommunities(response.data.data.docs)\n            })\n    }, [isLoggedIn])\n\n    const onCommunityJoinToggle = (event: any) => {\n        const com = communities.map((community: any) => {\n            if (event.detail.community === community._id) {\n                return {\n                    ...community,\n                    isJoined: event.detail.isJoined,\n                    isJoinPending: event.detail.isPending,\n                }\n            }\n            return community\n        })\n        setCommunities(com)\n    }\n\n    useEffect(() => {\n        document.addEventListener(COMMUNITY_JOIN_TOGGLE_EVENT, onCommunityJoinToggle)\n        return () => document.removeEventListener(COMMUNITY_JOIN_TOGGLE_EVENT, onCommunityJoinToggle)\n    }, [onCommunityJoinToggle, communities])\n\n    if (singleView) {\n        return <Items communities={communities} />\n    }\n\n    return (\n        <DefaultContent>\n            <Items communities={communities} />\n        </DefaultContent>\n    )\n}\n\nexport default Groups\n"],"sourceRoot":""}