{"version":3,"sources":["Views/Profile/Stats/Components/MemberStats.tsx","Views/Profile/Stats/index.tsx"],"names":["MemberStats","stats","points","receivedAward","awardGiven","getImageUrl","image","undefined","includes","WEBSITE_URL","className","src","CookieIcon","alt","length","map","ra","i","key","images","StatsAchievements","useState","progressBar","achievements","setStats","useEffect","UserSettings","fetchAll","then","response","data","toFixed","Profile","FormHeader","title","showDrafts"],"mappings":"oKAiHeA,EAtGsB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAC5BC,EAAgDD,EAAhDC,OADsD,EACND,EAAxCE,qBAD8C,MAC9B,GAD8B,IACNF,EAApBG,kBAD0B,MACb,GADa,EAGxDC,EAAc,SAACC,GACjB,IAAI,MAACC,EAAW,KAAM,IAAIC,SAASF,GAInC,MAAM,GAAN,OAAUG,IAAV,YAAyBH,IAG7B,OACI,yBAAKI,UAAU,kBACX,yBAAKA,UAAU,kCAEX,wBAAIA,UAAU,6BAAd,gBACA,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,wCACV,4BACI,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,YACZ,yBAAKC,IAAKC,IAAYC,IAAI,YAE9B,0BAAMH,UAAU,WACZ,kDADJ,IACqCR,KAI7C,4BACI,yBAAKQ,UAAU,gBACX,4BAAQA,UAAU,cAAlB,yBAAkDP,EAAcW,OAAhE,MACA,yBAAKJ,UAAU,sBACX,wBAAIA,UAAU,wBACTP,EAAcY,KAAI,SAACC,EAAIC,GACpB,OACI,wBAAIC,IAAKD,GACL,yBAAKN,IAAKN,EAAYW,EAAGG,OAAO,IAAKN,IAAI,mBAQrE,4BACI,yBAAKH,UAAU,gBACX,4BAAQA,UAAU,cAAlB,wBAAiDN,EAAWU,OAA5D,MACA,yBAAKJ,UAAU,sBACX,wBAAIA,UAAU,wBACTN,EAAWW,KAAI,SAACC,EAAIC,GACjB,OACI,wBAAIC,IAAKD,GACL,yBAAKN,IAAKN,EAAYW,EAAGG,OAAO,IAAKN,IAAI,wB,QClB9EO,UAlCe,WAAqB,IAAD,EACpBC,mBAAc,CACpCC,YAAa,GACbC,aAAc,GACdrB,OAAQ,IAJkC,mBACvCD,EADuC,KAChCuB,EADgC,OAMlBH,mBAAc,IANI,6BAsB9C,OAdAI,qBAAU,WAENC,IAAaC,WAAWC,MAAK,SAAAC,GACzBL,EAAS,CACLF,YAAaO,EAASC,KAAKA,KAAKR,YAChCC,aAAcM,EAASC,KAAKA,KAAKP,aACjCrB,OAAQ2B,EAASC,KAAKA,KAAK5B,OAAO6B,QAAQ,GAC1C5B,cAAe0B,EAASC,KAAKA,KAAK3B,eAAiB,GACnDC,WAAYyB,EAASC,KAAKA,KAAK1B,YAAc,UAItD,IAGC,kBAAC4B,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAYC,MAAO,WAAYC,YAAY,IAG3C,kBAAC,EAAD,CAAalC,MAAOA","file":"static/js/41.2757d7e4.chunk.js","sourcesContent":["import React, { FC, ReactElement } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { AwardImage, CookieIcon, TrophyImage } from \"../../../../Shared/Images/Images\"\nimport ProfileInterface from \"../../../../Interface/Profile/Profile\"\nimport { WEBSITE_URL } from \"../../../../Constants/constants\"\n\ntype MemberStats = {\n    stats: ProfileInterface\n}\n\nconst MemberStats: FC<MemberStats> = ({ stats }): ReactElement => {\n    const { points, receivedAward = [], awardGiven = [] } = stats\n\n    const getImageUrl = (image: any) => {\n        if ([undefined, null, \"\"].includes(image)) {\n            return undefined\n        }\n\n        return `${WEBSITE_URL}/${image}`\n    }\n\n    return (\n        <div className=\"mc-border mt-4\">\n            <div className=\"member-stats-wrap px-lg-4 px-2\">\n        \n                <h6 className=\"heading-sm pb-3 bb-1 mb-0\">Member Stats</h6>\n                <div className=\"member-stats-container\">\n                    <ul className=\"list-unstyled mb-0 member-stats-list\">\n                        <li>\n                            <div className=\"member-points\">\n                                <span className=\"pt-image\">\n                                    <img src={CookieIcon} alt=\"cookie\" />\n                                </span>\n                                <span className=\"pt-text\">\n                                    <strong>Cookie Points:</strong> {points}\n                                </span>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"award-earned\">\n                                <strong className=\"heading-sm\">{`Awards earned (${receivedAward.length})`}</strong>\n                                <div className=\"member-awards-list\">\n                                    <ul className=\"list-unstyled d-flex\">\n                                        {receivedAward.map((ra, i) => {\n                                            return (\n                                                <li key={i}>\n                                                    <img src={getImageUrl(ra.images[0])} alt=\"trophy\" />\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"award-earned\">\n                                <strong className=\"heading-sm\">{`Awards given (${awardGiven.length})`}</strong>\n                                <div className=\"member-awards-list\">\n                                    <ul className=\"list-unstyled d-flex\">\n                                        {awardGiven.map((ra, i) => {\n                                            return (\n                                                <li key={i}>\n                                                    <img src={getImageUrl(ra.images[0])} alt=\"trophy\" />\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                    {/*<ul\n                                            className=\"list-unstyled mb-0 pt-10 cdata-list event-related-links\"\n                                            id=\"sub-links\"\n                                        >\n                                            <h6 className=\"event-head-text\">\n                                                Case studies contributed\n                                            </h6>\n                                            <li>\n                                                <Link to=\"#\">This is a Link</Link>\n                                            </li>\n                                            <li>\n                                                <Link to=\"#\">This is a Link</Link>\n                                            </li>\n                                            <li>\n                                                <Link to=\"#\">This is a Link</Link>\n                                            </li>\n                                        </ul>*/}\n                    {/*<ul\n                        className=\"list-unstyled mb-0 pt-10 cdata-list event-related-links\"\n                        id=\"sub-links\"\n                    >\n                        <h6 className=\"event-head-text\">\n                            Calendar events contributed\n                        </h6>\n                        <li>\n                            <Link to=\"#\">This is a Link</Link>\n                        </li>\n                        <li>\n                            <Link to=\"#\">This is a Link</Link>\n                        </li>\n                        <li>\n                            <Link to=\"#\">This is a Link</Link>\n                        </li>\n                    </ul>*/}\n                </div>\n            \n              </div>\n         </div> \n    )\n}\n\nexport default MemberStats\n","import React, { FC, ReactElement, useState, useEffect } from \"react\"\n\nimport Profile from \"..\"\nimport FormHeader from \"../../../Container/Top/FormHeader\"\nimport MemberStats from \"./Components/MemberStats\"\nimport PendingAchievements from \"./Components/Pending\"\nimport StatsAndAchievements from \"./Components/StatsAndAchievements\"\nimport UserSettings from \"../../../Helpers/Request/Services/Profile/UserSettings\"\nimport AwardApi from \"../../../Helpers/Request/Services/Awards\";\nimport Awards from \"../Points\"\n\nconst StatsAchievements: FC = (): ReactElement => {\n    const [stats, setStats] = useState<any>({\n        progressBar: {},\n        achievements: {},\n        points: 0,\n    })\n    const [awards, setawards] = useState<any>([])\n\n    useEffect(() => {\n        \n        UserSettings.fetchAll().then(response => {\n            setStats({\n                progressBar: response.data.data.progressBar,\n                achievements: response.data.data.achievements,\n                points: response.data.data.points.toFixed(3),\n                receivedAward: response.data.data.receivedAward || [],\n                awardGiven: response.data.data.awardGiven || [],\n            })\n        })\n        //eslint-disable\n    }, [])\n\n    return (\n        <Profile>\n            {/* <Awards awards={awards} stats={stats} /> */}\n            <FormHeader title={\"My Stats\"} showDrafts={false} />\n            {/*<img style={{\"width\": \"100%\"}} src=\"https://paintingsmadebyme.com/wp-content/uploads/2015/08/Coming-Soon-PNG.png\" alt=\"\"/>*/}\n            {/*<PendingAchievements pending={stats.progressBar} />*/}\n            <MemberStats stats={stats} />\n            {/*<StatsAndAchievements achievements={stats.achievements /> */}\n        </Profile>\n    )\n}\n \nexport default StatsAchievements\n"],"sourceRoot":""}